function y = fdct22 (x) ;
    % remake to 64-point vector
    lal = zeros (64, 1);
    for i = 1:8,
        lal (1 + (i - 1) * 8: i * 8) = x (:, i);
    end

    % constants
    c1 = ga (1);
    c2 = ga (2);
    c3 = ga (3);
    c4 = ga (4);
    c5 = ga (5);
    c6 = ga (6);
    c7 = ga (7);

    % B3
    B3 = [[1, 0, 0, 0,  0,  0,  0,  1];
          [0, 1, 0, 0,  0,  0,  1,  0];
          [0, 0, 1, 0,  0,  1,  0,  0];
          [0, 0, 0, 1,  1,  0,  0,  0];
          [1, 0, 0, 0,  0,  0,  0, -1];
          [0, 1, 0, 0,  0,  0, -1,  0];
          [0, 0, 1, 0,  0, -1,  0,  0];
          [0, 0, 0, 1, -1,  0,  0,  0]];
    % B2
    B2 = [[1, 0,  0,  1, 0, 0, 0, 0];
          [0, 1,  1,  0, 0, 0, 0, 0];
          [1, 0,  0, -1, 0, 0, 0, 0];
          [0, 1, -1,  0, 0, 0, 0, 0];
          [0, 0,  0,  0, 1, 0, 0, 0];
          [0, 0,  0,  0, 0, 1, 0, 0];
          [0, 0,  0,  0, 0, 0, 1, 0];
          [0, 0,  0,  0, 0, 0, 0, 1]];
    % B1
    B1 = [[ 1, 1, 0,  0,  0, 0,  0, 0];
          [-1, 1, 0,  0,  0, 0,  0, 0];
          [ 0, 0, 0,  1,  0, 0,  0, 0];
          [ 0, 0, 1, -1,  0, 0,  0, 0];
          [ 0, 0, 0,  0,  0, 0, -1, 0];
          [ 0, 0, 0,  0, -1, 0,  0, 1];
          [ 0, 0, 0,  0,  1, 0, -1, 0];
          [ 0, 0, 0,  0,  0, 1,  0, 1]];

    B =  [[ 1, 1, 0,  0,  0,  0,  0, 0];
          [-1, 1, 0,  0,  0,  0,  0, 0];
          [ 0, 0, 0,  1,  0,  0,  0, 0];
          [ 0, 0, 1,  0,  0,  0,  0, 0];
          [ 0, 0, 0,  0,  0,  0, -1, 0];
          [ 0, 0, 0,  0,  0,  0,  0, 1];
          [ 0, 0, 0,  0,  0, -1,  0, 0];
          [ 0, 0, 0,  0, -1,  0,  0, 0]];
    B = B * B2 * B3;

    K = zeros (8);
    K (1, 1) = c4;
    K (2, 2) = c4;
    K (3:4, 3:4) = [[c6, c2]; [-c2, c6]];
    K (5:8, 5:8) = [[ c5, -c7,  c3,  c1];
                    [-c1,  c5, -c7,  c3];
                    [-c3, -c1,  c5, -c7];
                    [ c7, -c3, -c1,  c5]];
    K = .5 * K;

    % M
    M  = eye (8);
    M (4, 4) = c4;
    M (6, 6) = c4;
    M (7:8, 7:8) = [[c6, c2]; [-c2, c6]];

    % R8,1
    R  = [[1, 0,  0, 0,  0,  0,  0, 0];
          [0, 1,  0, 0,  0,  0,  0, 0];
          [0, 0,  1, 1,  0,  0,  0, 0];
          [0, 0, -1, 1,  0,  0,  0, 0];
          [0, 0,  0, 0,  1,  1, -1, 0];
          [0, 0,  0, 0, -1,  1,  0, 1];
          [0, 0,  0, 0, -1, -1, -1, 0];
          [0, 0,  0, 0,  1, -1,  0, 1]];
    % P
    P  = [[1, 0, 0, 0,  0,  0, 0,  0];
          [0, 0, 0, 0, -1,  0, 0,  0];
          [0, 0, 1, 0,  0,  0, 0,  0];
          [0, 0, 0, 0,  0, -1, 0,  0];
          [0, 1, 0, 0,  0,  0, 0,  0];
          [0, 0, 0, 0,  0,  0, 0, -1];
          [0, 0, 0, 1,  0,  0, 0,  0];
          [0, 0, 0, 0,  0,  0, 1,  0]];
    % D
    D  = [[2,  0,  0,  0,  0,  0,  0,  0];
          [0, c4,  0,  0,  0,  0,  0,  0];
          [0,  0, c6,  0,  0,  0,  0,  0];
          [0,  0,  0, c2,  0,  0,  0,  0];
          [0,  0,  0,  0, c5,  0,  0,  0];
          [0,  0,  0,  0,  0, c1,  0,  0];
          [0,  0,  0,  0,  0,  0, c3,  0];
          [0,  0,  0,  0,  0,  0,  0, c7]];
    D = D * .5;

    % P * D * R * M * R82
    % R82 = B1 * B2 * B3;
    y   = kron (P, P) * kron (D, D) * kron (R, R) * kron (M, M) * kron (B1, B1) * kron (B2, B2) * kron (B3, B3) * lal;
    % y   = kron (P, P) * kron (D, D) * kron (R, R) * kron (M, M) * kron (R82, R82) * lal;
    % y = kron (P, P) * kron (K, K) * kron (B, B) * lal;

    lol = zeros (8, 8);
    for i = 1:8,
        lol (:, i) = y (1 + (i - 1) * 8 : i * 8);
    end
    y = lol;
